\doxysection{main.\+cpp File Reference}
\hypertarget{main_8cpp}{}\label{main_8cpp}\index{main.cpp@{main.cpp}}
{\ttfamily \#include $<$opencv2/opencv.\+hpp$>$}\newline
{\ttfamily \#include $<$iostream$>$}\newline
{\ttfamily \#include $<$fstream$>$}\newline
{\ttfamily \#include $<$sstream$>$}\newline
{\ttfamily \#include $<$string$>$}\newline
{\ttfamily \#include $<$vector$>$}\newline
{\ttfamily \#include $<$filesystem$>$}\newline
{\ttfamily \#include $<$map$>$}\newline
{\ttfamily \#include $<$windows.\+h$>$}\newline
{\ttfamily \#include $<$nlohmann/json.\+hpp$>$}\newline
Include dependency graph for main.\+cpp\+:
% FIG 0
\doxysubsubsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
using \mbox{\hyperlink{main_8cpp_ab701e3ac61a85b337ec5c1abaad6742d}{json}} = nlohmann\+::json
\end{DoxyCompactItemize}
\doxysubsubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
double \mbox{\hyperlink{main_8cpp_a71c998a6aa35328bbfce2ee22853a78e}{calculate\+IoU}} (const std\+::vector$<$ cv\+::\+Point2f $>$ \&points1, const std\+::vector$<$ cv\+::\+Point2f $>$ \&points2)
\begin{DoxyCompactList}\small\item\em Calculates the Intersection over Union (IoU) between two polygons. \end{DoxyCompactList}\item 
std\+::map$<$ std\+::string, std\+::vector$<$ std\+::vector$<$ cv\+::\+Point2f $>$ $>$ $>$ \mbox{\hyperlink{main_8cpp_a3ce74665b4fb409070a7a827c81897d7}{load\+Ground\+Truth}} (const std\+::string \&file\+Name)
\begin{DoxyCompactList}\small\item\em Loads ground truth data (polygons) from a JSON annotation file. \end{DoxyCompactList}\item 
int \mbox{\hyperlink{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}{main}} ()
\end{DoxyCompactItemize}


\doxysubsection{Typedef Documentation}
\Hypertarget{main_8cpp_ab701e3ac61a85b337ec5c1abaad6742d}\index{main.cpp@{main.cpp}!json@{json}}
\index{json@{json}!main.cpp@{main.cpp}}
\doxysubsubsection{\texorpdfstring{json}{json}}
{\footnotesize\ttfamily \label{main_8cpp_ab701e3ac61a85b337ec5c1abaad6742d} 
using \mbox{\hyperlink{main_8cpp_ab701e3ac61a85b337ec5c1abaad6742d}{json}} = nlohmann\+::json}



\doxysubsection{Function Documentation}
\Hypertarget{main_8cpp_a71c998a6aa35328bbfce2ee22853a78e}\index{main.cpp@{main.cpp}!calculateIoU@{calculateIoU}}
\index{calculateIoU@{calculateIoU}!main.cpp@{main.cpp}}
\doxysubsubsection{\texorpdfstring{calculateIoU()}{calculateIoU()}}
{\footnotesize\ttfamily \label{main_8cpp_a71c998a6aa35328bbfce2ee22853a78e} 
double calculate\+IoU (\begin{DoxyParamCaption}\item[{const std\+::vector$<$ cv\+::\+Point2f $>$ \&}]{points1}{, }\item[{const std\+::vector$<$ cv\+::\+Point2f $>$ \&}]{points2}{}\end{DoxyParamCaption})}



Calculates the Intersection over Union (IoU) between two polygons. 

The function creates binary masks for two polygons and computes the area of intersection and the area of union to calculate the IoU metric.


\begin{DoxyParams}{Parameters}
{\em points1} & A vector of points representing the first polygon. \\
\hline
{\em points2} & A vector of points representing the second polygon.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The IoU metric, calculated as the area of intersection divided by the area of union. 
\end{DoxyReturn}
\Hypertarget{main_8cpp_a3ce74665b4fb409070a7a827c81897d7}\index{main.cpp@{main.cpp}!loadGroundTruth@{loadGroundTruth}}
\index{loadGroundTruth@{loadGroundTruth}!main.cpp@{main.cpp}}
\doxysubsubsection{\texorpdfstring{loadGroundTruth()}{loadGroundTruth()}}
{\footnotesize\ttfamily \label{main_8cpp_a3ce74665b4fb409070a7a827c81897d7} 
std\+::map$<$ std\+::string, std\+::vector$<$ std\+::vector$<$ cv\+::\+Point2f $>$ $>$ $>$ load\+Ground\+Truth (\begin{DoxyParamCaption}\item[{const std\+::string \&}]{file\+Name}{}\end{DoxyParamCaption})}



Loads ground truth data (polygons) from a JSON annotation file. 

This function reads a JSON file containing annotations and extracts the polygon points for each annotated region in the images.


\begin{DoxyParams}{Parameters}
{\em file\+Name} & Path to the JSON annotation file.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
A map of filenames to their associated ground truth polygons. 
\end{DoxyReturn}
\Hypertarget{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}\index{main.cpp@{main.cpp}!main@{main}}
\index{main@{main}!main.cpp@{main.cpp}}
\doxysubsubsection{\texorpdfstring{main()}{main()}}
{\footnotesize\ttfamily \label{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4} 
int main (\begin{DoxyParamCaption}{}{}\end{DoxyParamCaption})}

